"use strict";var l=Object.create;var n=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var d=Object.getOwnPropertyNames;var G=Object.getPrototypeOf,R=Object.prototype.hasOwnProperty;var x=(e,t)=>{for(var o in t)n(e,o,{get:t[o],enumerable:!0})},g=(e,t,o,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of d(t))!R.call(e,r)&&r!==o&&n(e,r,{get:()=>t[r],enumerable:!(i=b(t,r))||i.enumerable});return e};var y=(e,t,o)=>(o=e!=null?l(G(e)):{},g(t||!e||!e.__esModule?n(o,"default",{value:e,enumerable:!0}):o,e)),_=e=>g(n({},"__esModule",{value:!0}),e);var D={};x(D,{defaultGithubRepository:()=>a,getGithubRepoUsecase:()=>c,getLogger:()=>u});module.exports=_(D);var s=y(require("winston")),{combine:U,timestamp:w,json:z}=s.default.format;function u(){let e=s.default.createLogger({level:"info",format:U(w(),z()),transports:[]});return process.env.NODE_ENV!=="production"&&e.add(new s.default.transports.Console({format:s.default.format.simple()})),e}function a(e){return{async repos(t){return e.fetchWithCache(`https://api.github.com/users/${t}/repos?sort=updated&per_page=100`,[])}}}function c(e){return{async execute(t){return e.repos(t).then(o=>{let i=[];return o.forEach(r=>{if(r.name===t)return;let m=(r.description??"").split(" | "),h=m[0]??"",f=(m[1]??"").split(", ").filter(p=>p.includes("{")).map(p=>p.replace("{ ","").replace(" }",""));i.push({description:h,homepage:r.homepage,html_url:r.html_url,id:r.id,name:r.name,technologies:f,stargazers_count:r.stargazers_count})}),i})}}}0&&(module.exports={defaultGithubRepository,getGithubRepoUsecase,getLogger});
